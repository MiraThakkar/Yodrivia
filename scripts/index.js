var questionCardTemplate = $("#cardTemplate").clone();
console.log(questionCardTemplate);

$(document).ready(function () {
    $("#cardTemplate").remove();
    //call the function when load the page (prevent see the back of the card "anwsers")
    flipcard();

    // Put all necessary Event Listeners below here //
    //////////////////////////////////////////////////

    $("#generateQuestions").click(function(){ 
        $("#errorMessage").text("");
        generateQuestionValidation()
    });

    $("#addUserQuestionBttn").click(function() {
        userFormValidation();
        //TODO: Add the question to the questions container
    });

    //bind functionality to sidebar
    $('#sidebarCollapse').on('click', function () {
        $('#sidebar').toggleClass('active');
        $(this).toggleClass('active');
    });

    document.addEventListener('input', function (event) {
        if (event.target.tagName.toLowerCase() !== 'textarea') return;
        autoExpand(event.target);
    }, false);

    //event click on question card controlling the flip
    $(".card-question").click(function(){ flipcard() }) ;  

    $(document).on("click", ".questionTypeRadio", renderAnswerInputs)
});

//function to flip the question card
function flipcard() {
    $(".card-question").flip({ axis: 'x' });
}

var autoExpand = function (field) {

	// Reset field height
	field.style.height = 'inherit';

	// Get the computed styles for the element
	var computed = window.getComputedStyle(field);

	// Calculate the height
	var height = parseInt(computed.getPropertyValue('border-top-width'), 10)
	             + parseInt(computed.getPropertyValue('padding-top'), 10)
	             + field.scrollHeight
	             + parseInt(computed.getPropertyValue('padding-bottom'), 10)
	             + parseInt(computed.getPropertyValue('border-bottom-width'), 10);

	field.style.height = height + 'px';

};

function renderAnswerInputs() {
    if($(this).attr("data-questionType") === "trueFalse") {
        $("#trueFalseAnswers").removeClass("d-none");
        $("#userMultipleChoiceAnswers").addClass("d-none")
    } else if($(this).attr("data-questionType") === "multipleChoice") {
        $("#trueFalseAnswers").addClass("d-none");
        $("#userMultipleChoiceAnswers").removeClass("d-none")
    } else if($(this).attr("data-questionType") === "openEnded") {
       //TODO: Time permitting 
    } 
};

//function to flip the question card
function flipcard (){
    $(".card-question").flip({
        axis: 'x',
    });
};


//Question category options

var questionCatetory = {
    "Any Type": "",
    "General Knowledge": "9",
    "Sports":  "21",
    "History": "23",
    "Politics": "24"
    
  };


  var category= $('#categorySelect');
 
  $.each(questionCatetory, function(key, value) {
    var option = $("<option/>", {
      text: key,
      value: value
    });
    category.append(option);
  });

//funtion to call Trivia DB
function triviaDB(numOfQuestions, category="", difficulty=""){
    (category) ? category=`&category=${category}` : category="";
    (difficulty) ? difficulty=`&difficulty=${difficulty}` : difficulty="";

    var triviaURL = `https://opentdb.com/api.php?amount=${numOfQuestions}${category}${difficulty}`
    //ajax trivia call to get the answers generated by Trivia DB
    $.ajax({
        url: triviaURL,
        method: "GET"
        }).then(function(response){

        console.log(response);           
    });
        
}

function generateQuestionValidation() {
    //Form validation to ensure input are correct
    if(parseInt($("#numOfQuestionsInputDB").val()) < 0 || parseInt($("#numOfQuestionsInputDB").val()) > 50) {
        $("#errorMessage").text("Enter a number between 1-50");
        return;
    }

    let numberOfQuestions = parseInt($("#numOfQuestionsInputDB").val());
    //TODO: get question type and category fields

    $("#myCarousel").empty();
    $("#card-questions-container").empty();

    triviaDB(numberOfQuestions);
}

function userFormValidation() {
    //Reset error to start
    $("#userQuestionInputError").text("");
    $("#questionTypeError").text("");
    $("#userAnswersInputError").text("");

    if($("#userInputQuestion").val().length === 0) {
        $("#userQuestionInputError").text("Please enter a question first...")
        return;
    }

    if($("#userInputQuestionType1").is(":checked")){
        if(($("#userAnswerTrue").is(":checked") || $("#userAnswerFalse").is(":checked")))  return;
        $("#userAnswersInputError").text("Please select true/false for your question!");
    } else if($("#userInputQuestionType2").is(":checked")) { //multiple choice is clicked
        if(($("#userMultipleChoiceAnswer").val().length > 0) && ($("#userMultipleChoiceA").val().length > 0) && ($("#userMultipleChoiceB").val().length > 0) && ($("#userMultipleChoiceC").val().length > 0)) return;
        $("#userAnswersInputError").text("Please enter 3 options & answer!");
    } else { //nothing is checked
        $("#questionTypeError").text("Please select question type!");
    }
}
    
